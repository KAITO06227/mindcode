# MineCode Nginx リバースプロキシ設定
# Rocky Linux 本番環境用

# HTTPからHTTPSへのリダイレクト
server {
    listen 80;
    listen [::]:80;
    server_name minecode.si.aoyama.ac.jp;

    # Let's Encrypt の証明書検証用
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # その他すべてのリクエストをHTTPSにリダイレクト
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS サーバー設定
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name minecode.si.aoyama.ac.jp;

    # SSL証明書の設定
    ssl_certificate /etc/letsencrypt/live/minecode.si.aoyama.ac.jp/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/minecode.si.aoyama.ac.jp/privkey.pem;

    # SSL設定の最適化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # セキュリティヘッダー
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # アップロードサイズの制限（大きなプロジェクトファイル対応）
    client_max_body_size 100M;

    # アクセスログとエラーログ
    access_log /var/log/nginx/minecode-access.log;
    error_log /var/log/nginx/minecode-error.log;

    # ルートパスの設定
    root /var/www/minecode/client/build;
    index index.html;

    # API リクエストのプロキシ設定
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # タイムアウト設定（AI処理用に長めに設定）
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Socket.IO (Claude Code統合) のプロキシ設定
    location /socket.io/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket用のタイムアウト設定
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # 静的ファイルのキャッシュ設定
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # React Router のフォールバック設定
    location / {
        try_files $uri $uri/ /index.html;
    }

    # セキュリティ: 隠しファイルへのアクセス拒否
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # セキュリティ: node_modules へのアクセス拒否
    location ~ /node_modules {
        deny all;
        access_log off;
        log_not_found off;
    }
}
